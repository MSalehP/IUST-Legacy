
AVRASM ver. 2.1.30  D:\University\Microprocessor lab\az 11\Debug\List\az11.asm Wed Jul 15 23:14:57 2020

D:\University\Microprocessor lab\az 11\Debug\List\az11.asm(1088): warning: Register r5 already defined by the .DEF directive
D:\University\Microprocessor lab\az 11\Debug\List\az11.asm(1089): warning: Register r4 already defined by the .DEF directive
D:\University\Microprocessor lab\az 11\Debug\List\az11.asm(1090): warning: Register r7 already defined by the .DEF directive
D:\University\Microprocessor lab\az 11\Debug\List\az11.asm(1091): warning: Register r6 already defined by the .DEF directive
D:\University\Microprocessor lab\az 11\Debug\List\az11.asm(1092): warning: Register r9 already defined by the .DEF directive
D:\University\Microprocessor lab\az 11\Debug\List\az11.asm(1093): warning: Register r8 already defined by the .DEF directive
D:\University\Microprocessor lab\az 11\Debug\List\az11.asm(1094): warning: Register r11 already defined by the .DEF directive
D:\University\Microprocessor lab\az 11\Debug\List\az11.asm(1095): warning: Register r12 already defined by the .DEF directive
D:\University\Microprocessor lab\az 11\Debug\List\az11.asm(1096): warning: Register r13 already defined by the .DEF directive
D:\University\Microprocessor lab\az 11\Debug\List\az11.asm(1097): warning: Register r10 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __hour=R5
                 	.DEF __min=R4
                 	.DEF __sec=R7
                 	.DEF _week_day=R6
                 	.DEF __day=R9
                 	.DEF __month=R8
                 	.DEF __year=R11
                 	.DEF _s1=R12
                 	.DEF _s1_msb=R13
                 	.DEF __lcd_x=R10
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0052 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G102:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G102:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 4954
000034 454d
000035 203e
000036 4400      	.DB  0x54,0x49,0x4D,0x45,0x3E,0x20,0x0,0x44
000037 5441
000038 3e45
000039 0020
00003a 3032      	.DB  0x41,0x54,0x45,0x3E,0x20,0x0,0x32,0x30
00003b 4900
00003c 5355
00003d 0054      	.DB  0x0,0x49,0x55,0x53,0x54,0x0
                 _0x2020003:
00003e c080      	.DB  0x80,0xC0
                 _0x2060060:
D:\University\Microprocessor lab\az 11\Debug\List\az11.asm(1141): warning: .cseg .db misalignment - padding zero byte
00003f 0001      	.DB  0x1
                 _0x2060000:
000040 4e2d
000041 4e41
000042 4900
000043 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\University\Microprocessor lab\az 11\Debug\List\az11.asm(1144): warning: .cseg .db misalignment - padding zero byte
000044 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000045 0007      	.DW  0x07
000046 0260      	.DW  _0x6
000047 0066      	.DW  _0x0*2
                 
000048 0007      	.DW  0x07
000049 0267      	.DW  _0x6+7
00004a 006d      	.DW  _0x0*2+7
                 
00004b 0002      	.DW  0x02
00004c 0278      	.DW  __base_y_G101
00004d 007c      	.DW  _0x2020003*2
                 
00004e 0001      	.DW  0x01
00004f 027e      	.DW  __seed_G103
000050 007e      	.DW  _0x2060060*2
                 
                 _0xFFFFFFFF:
000051 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000052 94f8      	CLI
000053 27ee      	CLR  R30
000054 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000055 e0f1      	LDI  R31,1
000056 bffb      	OUT  GICR,R31
000057 bfeb      	OUT  GICR,R30
000058 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000059 e08d      	LDI  R24,(14-2)+1
00005a e0a2      	LDI  R26,2
00005b 27bb      	CLR  R27
                 __CLEAR_REG:
00005c 93ed      	ST   X+,R30
00005d 958a      	DEC  R24
00005e f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005f e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000060 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000061 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000062 93ed      	ST   X+,R30
000063 9701      	SBIW R24,1
000064 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000065 e8ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000066 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000067 9185      	LPM  R24,Z+
000068 9195      	LPM  R25,Z+
000069 9700      	SBIW R24,0
00006a f061      	BREQ __GLOBAL_INI_END
00006b 91a5      	LPM  R26,Z+
00006c 91b5      	LPM  R27,Z+
00006d 9005      	LPM  R0,Z+
00006e 9015      	LPM  R1,Z+
00006f 01bf      	MOVW R22,R30
000070 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000071 9005      	LPM  R0,Z+
000072 920d      	ST   X+,R0
000073 9701      	SBIW R24,1
000074 f7e1      	BRNE __GLOBAL_INI_LOOP
000075 01fb      	MOVW R30,R22
000076 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000077 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000078 bfed      	OUT  SPL,R30
000079 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00007a bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00007b e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00007c e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00007d 940c 007f 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*******************************************************
                 ;Project :
                 ;Version :
                 ;Date    : 7/15/2020
                 ;Author  :
                 ;Company :
                 ;Comments:
                 ;*******************************************************/
                 ;
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <i2c.h>
                 ;#include <ds1307.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;unsigned char _hour, _min, _sec;
                 ;unsigned char week_day, _day,_month,_year;
                 ;unsigned char* s1;
                 ;unsigned char* s2;
                 ;unsigned char* s3;
                 ;unsigned char* s4;
                 ;unsigned char* s5;
                 ;unsigned char* s6;
                 ;void main(void)
                 ; 0000 001A {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 001B 
                 ; 0000 001C DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
00007f e0e0      	LDI  R30,LOW(0)
000080 bbea      	OUT  0x1A,R30
                 ; 0000 001D 
                 ; 0000 001E PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
000081 bbeb      	OUT  0x1B,R30
                 ; 0000 001F 
                 ; 0000 0020 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
000082 bbe7      	OUT  0x17,R30
                 ; 0000 0021 
                 ; 0000 0022 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000083 bbe8      	OUT  0x18,R30
                 ; 0000 0023 
                 ; 0000 0024 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
000084 bbe4      	OUT  0x14,R30
                 ; 0000 0025 
                 ; 0000 0026 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000085 bbe5      	OUT  0x15,R30
                 ; 0000 0027 
                 ; 0000 0028 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000086 bbe1      	OUT  0x11,R30
                 ; 0000 0029 
                 ; 0000 002A PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000087 bbe2      	OUT  0x12,R30
                 ; 0000 002B 
                 ; 0000 002C TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
000088 bfe3      	OUT  0x33,R30
                 ; 0000 002D TCNT0=0x00;
000089 bfe2      	OUT  0x32,R30
                 ; 0000 002E OCR0=0x00;
00008a bfec      	OUT  0x3C,R30
                 ; 0000 002F 
                 ; 0000 0030 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
00008b bdef      	OUT  0x2F,R30
                 ; 0000 0031 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
00008c bdee      	OUT  0x2E,R30
                 ; 0000 0032 TCNT1H=0x00;
00008d bded      	OUT  0x2D,R30
                 ; 0000 0033 TCNT1L=0x00;
00008e bdec      	OUT  0x2C,R30
                 ; 0000 0034 ICR1H=0x00;
00008f bde7      	OUT  0x27,R30
                 ; 0000 0035 ICR1L=0x00;
000090 bde6      	OUT  0x26,R30
                 ; 0000 0036 OCR1AH=0x00;
000091 bdeb      	OUT  0x2B,R30
                 ; 0000 0037 OCR1AL=0x00;
000092 bdea      	OUT  0x2A,R30
                 ; 0000 0038 OCR1BH=0x00;
000093 bde9      	OUT  0x29,R30
                 ; 0000 0039 OCR1BL=0x00;
000094 bde8      	OUT  0x28,R30
                 ; 0000 003A 
                 ; 0000 003B ASSR=0<<AS2;
000095 bde2      	OUT  0x22,R30
                 ; 0000 003C TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
000096 bde5      	OUT  0x25,R30
                 ; 0000 003D TCNT2=0x00;
000097 bde4      	OUT  0x24,R30
                 ; 0000 003E OCR2=0x00;
000098 bde3      	OUT  0x23,R30
                 ; 0000 003F 
                 ; 0000 0040 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
000099 bfe9      	OUT  0x39,R30
                 ; 0000 0041 
                 ; 0000 0042 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
00009a bfe5      	OUT  0x35,R30
                 ; 0000 0043 MCUCSR=(0<<ISC2);
00009b bfe4      	OUT  0x34,R30
                 ; 0000 0044 
                 ; 0000 0045 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
00009c b9ea      	OUT  0xA,R30
                 ; 0000 0046 
                 ; 0000 0047 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
00009d e8e0      	LDI  R30,LOW(128)
00009e b9e8      	OUT  0x8,R30
                 ; 0000 0048 SFIOR=(0<<ACME);
00009f e0e0      	LDI  R30,LOW(0)
0000a0 bfe0      	OUT  0x30,R30
                 ; 0000 0049 
                 ; 0000 004A ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0000a1 b9e6      	OUT  0x6,R30
                 ; 0000 004B 
                 ; 0000 004C SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0000a2 b9ed      	OUT  0xD,R30
                 ; 0000 004D 
                 ; 0000 004E TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0000a3 bfe6      	OUT  0x36,R30
                 ; 0000 004F 
                 ; 0000 0050 i2c_init();
0000a4 940e 02a9 	CALL _i2c_init
                 ; 0000 0051 
                 ; 0000 0052 rtc_init(0,0,0);
0000a6 e0e0      	LDI  R30,LOW(0)
0000a7 93ea      	ST   -Y,R30
0000a8 93ea      	ST   -Y,R30
0000a9 e0a0      	LDI  R26,LOW(0)
0000aa d097      	RCALL _rtc_init
                 ; 0000 0053 
                 ; 0000 0054 lcd_init(20);
0000ab e1a4      	LDI  R26,LOW(20)
0000ac d15a      	RCALL _lcd_init
                 ; 0000 0055   /*
                 ; 0000 0056 unsigned char rtc_read(unsigned char address);
                 ; 0000 0057 void rtc_write(unsigned char address,unsigned char data);
                 ; 0000 0058 void rtc_init(unsigned char rs,unsigned char sqwe,unsigned char out);
                 ; 0000 0059 void rtc_get_time(unsigned char *hour,unsigned char *min,unsigned char *sec);
                 ; 0000 005A void rtc_set_time(unsigned char hour,unsigned char min,unsigned char sec);
                 ; 0000 005B void rtc_get_date(unsigned char *week_day, unsigned char *day,unsigned char *month,unsigned char *year);
                 ; 0000 005C void rtc_set_date(unsigned char week_day, unsigned char day,unsigned char month,unsigned char year);
                 ; 0000 005D */
                 ; 0000 005E 
                 ; 0000 005F 
                 ; 0000 0060 
                 ; 0000 0061 while (1)
                 _0x3:
                 ; 0000 0062       {
                 ; 0000 0063       lcd_clear();
0000ad d110      	RCALL _lcd_clear
                 ; 0000 0064       lcd_puts("TIME> ");
                +
0000ae e6a0     +LDI R26 , LOW ( _0x6 + ( 0 ) )
0000af e0b2     +LDI R27 , HIGH ( _0x6 + ( 0 ) )
                 	__POINTW2MN _0x6,0
0000b0 d134      	RCALL _lcd_puts
                 ; 0000 0065       lcd_gotoxy(0,1);
0000b1 e0e0      	LDI  R30,LOW(0)
0000b2 93ea      	ST   -Y,R30
0000b3 e0a1      	LDI  R26,LOW(1)
0000b4 d0fa      	RCALL _lcd_gotoxy
                 ; 0000 0066       lcd_puts("DATE> ");
                +
0000b5 e6a7     +LDI R26 , LOW ( _0x6 + ( 7 ) )
0000b6 e0b2     +LDI R27 , HIGH ( _0x6 + ( 7 ) )
                 	__POINTW2MN _0x6,7
0000b7 d12d      	RCALL _lcd_puts
                 ; 0000 0067       rtc_get_time(&_hour,&_min,&_sec);
0000b8 e0e5      	LDI  R30,LOW(5)
0000b9 e0f0      	LDI  R31,HIGH(5)
0000ba 93fa      	ST   -Y,R31
0000bb 93ea      	ST   -Y,R30
0000bc e0e4      	LDI  R30,LOW(4)
0000bd e0f0      	LDI  R31,HIGH(4)
0000be 93fa      	ST   -Y,R31
0000bf 93ea      	ST   -Y,R30
0000c0 e0a7      	LDI  R26,LOW(7)
0000c1 e0b0      	LDI  R27,HIGH(7)
0000c2 d098      	RCALL _rtc_get_time
                 ; 0000 0068       rtc_get_date(&week_day,&_day,&_month,&_year);
0000c3 e0e6      	LDI  R30,LOW(6)
0000c4 e0f0      	LDI  R31,HIGH(6)
0000c5 93fa      	ST   -Y,R31
0000c6 93ea      	ST   -Y,R30
0000c7 e0e9      	LDI  R30,LOW(9)
0000c8 e0f0      	LDI  R31,HIGH(9)
0000c9 93fa      	ST   -Y,R31
0000ca 93ea      	ST   -Y,R30
0000cb e0e8      	LDI  R30,LOW(8)
0000cc e0f0      	LDI  R31,HIGH(8)
0000cd 93fa      	ST   -Y,R31
0000ce 93ea      	ST   -Y,R30
0000cf e0ab      	LDI  R26,LOW(11)
0000d0 e0b0      	LDI  R27,HIGH(11)
0000d1 d0a2      	RCALL _rtc_get_date
                 ; 0000 0069       //time
                 ; 0000 006A       lcd_gotoxy(6,0);
0000d2 e0e6      	LDI  R30,LOW(6)
0000d3 93ea      	ST   -Y,R30
0000d4 e0a0      	LDI  R26,LOW(0)
0000d5 d0d9      	RCALL _lcd_gotoxy
                 ; 0000 006B       itoa(_hour,s1);
0000d6 2de5      	MOV  R30,R5
0000d7 e0f0      	LDI  R31,0
0000d8 93fa      	ST   -Y,R31
0000d9 93ea      	ST   -Y,R30
0000da 01d6      	MOVW R26,R12
0000db 940e 0236 	CALL _itoa
                 ; 0000 006C       lcd_puts(s1);
0000dd 01d6      	MOVW R26,R12
0000de 940e 0271 	CALL SUBOPT_0x0
                 ; 0000 006D       lcd_putsf(" ");
                 ; 0000 006E       itoa(_min,s2);
0000e0 2de4      	MOV  R30,R4
0000e1 e0f0      	LDI  R31,0
0000e2 93fa      	ST   -Y,R31
0000e3 93ea      	ST   -Y,R30
0000e4 91a0 026e 	LDS  R26,_s2
0000e6 91b0 026f 	LDS  R27,_s2+1
0000e8 940e 0236 	CALL _itoa
                 ; 0000 006F       lcd_puts(s2);
0000ea 91a0 026e 	LDS  R26,_s2
0000ec 91b0 026f 	LDS  R27,_s2+1
0000ee 940e 0271 	CALL SUBOPT_0x0
                 ; 0000 0070       lcd_putsf(" ");
                 ; 0000 0071       itoa(_sec,s3);
0000f0 2de7      	MOV  R30,R7
0000f1 e0f0      	LDI  R31,0
0000f2 93fa      	ST   -Y,R31
0000f3 93ea      	ST   -Y,R30
0000f4 91a0 0270 	LDS  R26,_s3
0000f6 91b0 0271 	LDS  R27,_s3+1
0000f8 940e 0236 	CALL _itoa
                 ; 0000 0072       lcd_puts(s3);
0000fa 91a0 0270 	LDS  R26,_s3
0000fc 91b0 0271 	LDS  R27,_s3+1
0000fe d0e6      	RCALL _lcd_puts
                 ; 0000 0073       //date
                 ; 0000 0074       lcd_gotoxy(6,1);
0000ff e0e6      	LDI  R30,LOW(6)
000100 93ea      	ST   -Y,R30
000101 e0a1      	LDI  R26,LOW(1)
000102 d0ac      	RCALL _lcd_gotoxy
                 ; 0000 0075       itoa(_day,s4);
000103 2de9      	MOV  R30,R9
000104 e0f0      	LDI  R31,0
000105 93fa      	ST   -Y,R31
000106 93ea      	ST   -Y,R30
000107 91a0 0272 	LDS  R26,_s4
000109 91b0 0273 	LDS  R27,_s4+1
00010b 940e 0236 	CALL _itoa
                 ; 0000 0076       lcd_puts(s4);
00010d 91a0 0272 	LDS  R26,_s4
00010f 91b0 0273 	LDS  R27,_s4+1
000111 940e 0271 	CALL SUBOPT_0x0
                 ; 0000 0077       lcd_putsf(" ");
                 ; 0000 0078       itoa(_month,s5);
000113 2de8      	MOV  R30,R8
000114 e0f0      	LDI  R31,0
000115 93fa      	ST   -Y,R31
000116 93ea      	ST   -Y,R30
000117 91a0 0274 	LDS  R26,_s5
000119 91b0 0275 	LDS  R27,_s5+1
00011b 940e 0236 	CALL _itoa
                 ; 0000 0079       lcd_puts(s5);
00011d 91a0 0274 	LDS  R26,_s5
00011f 91b0 0275 	LDS  R27,_s5+1
000121 940e 0271 	CALL SUBOPT_0x0
                 ; 0000 007A       lcd_putsf(" ");
                 ; 0000 007B       lcd_putsf("20");
                +
000123 e7a4     +LDI R26 , LOW ( 2 * _0x0 + ( 14 ) )
000124 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 14 ) )
                 	__POINTW2FN _0x0,14
000125 d0ce      	RCALL _lcd_putsf
                 ; 0000 007C       itoa(_year,s6);
000126 2deb      	MOV  R30,R11
000127 e0f0      	LDI  R31,0
000128 93fa      	ST   -Y,R31
000129 93ea      	ST   -Y,R30
00012a 91a0 0276 	LDS  R26,_s6
00012c 91b0 0277 	LDS  R27,_s6+1
00012e 940e 0236 	CALL _itoa
                 ; 0000 007D       lcd_puts(s6);
000130 91a0 0276 	LDS  R26,_s6
000132 91b0 0277 	LDS  R27,_s6+1
000134 d0b0      	RCALL _lcd_puts
                 ; 0000 007E       lcd_gotoxy(0,2);
000135 e0e0      	LDI  R30,LOW(0)
000136 93ea      	ST   -Y,R30
000137 e0a2      	LDI  R26,LOW(2)
000138 d076      	RCALL _lcd_gotoxy
                 ; 0000 007F          lcd_putsf("IUST");
                +
000139 e7a7     +LDI R26 , LOW ( 2 * _0x0 + ( 17 ) )
00013a e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW2FN _0x0,17
00013b d0b8      	RCALL _lcd_putsf
                 ; 0000 0080       delay_ms(1000);
00013c eea8      	LDI  R26,LOW(1000)
00013d e0b3      	LDI  R27,HIGH(1000)
00013e 940e 02fa 	CALL _delay_ms
                 ; 0000 0081       //IUST
                 ; 0000 0082 
                 ; 0000 0083       }
000140 cf6c      	RJMP _0x3
                 ; 0000 0084 }
                 _0x7:
000141 cfff      	RJMP _0x7
                 ; .FEND
                 
                 	.DSEG
                 _0x6:
000260           	.BYTE 0xE
                 
                 	.CSEG
                 _rtc_init:
                 ; .FSTART _rtc_init
000142 93aa      	ST   -Y,R26
000143 81ea      	LDD  R30,Y+2
000144 70e3      	ANDI R30,LOW(0x3)
000145 83ea      	STD  Y+2,R30
000146 81e9      	LDD  R30,Y+1
000147 30e0      	CPI  R30,0
000148 f019      	BREQ _0x2000003
000149 81ea      	LDD  R30,Y+2
00014a 61e0      	ORI  R30,0x10
00014b 83ea      	STD  Y+2,R30
                 _0x2000003:
00014c 81e8      	LD   R30,Y
00014d 30e0      	CPI  R30,0
00014e f019      	BREQ _0x2000004
00014f 81ea      	LDD  R30,Y+2
000150 68e0      	ORI  R30,0x80
000151 83ea      	STD  Y+2,R30
                 _0x2000004:
000152 940e 0277 	CALL SUBOPT_0x1
000154 e0a7      	LDI  R26,LOW(7)
000155 940e 02e2 	CALL _i2c_write
000157 81aa      	LDD  R26,Y+2
000158 940e 027c 	CALL SUBOPT_0x2
00015a c0aa      	RJMP _0x2100003
                 ; .FEND
                 _rtc_get_time:
                 ; .FSTART _rtc_get_time
00015b 93ba      	ST   -Y,R27
00015c 93aa      	ST   -Y,R26
00015d 940e 0277 	CALL SUBOPT_0x1
00015f e0a0      	LDI  R26,LOW(0)
000160 940e 027c 	CALL SUBOPT_0x2
000162 940e 0280 	CALL SUBOPT_0x3
000164 940e 0288 	CALL SUBOPT_0x4
000166 940e 028f 	CALL SUBOPT_0x5
000168 940e 0295 	CALL SUBOPT_0x6
00016a 2fae      	MOV  R26,R30
00016b 940e 0264 	CALL _bcd2bin
00016d 81ac      	LDD  R26,Y+4
00016e 81bd      	LDD  R27,Y+4+1
00016f 93ec      	ST   X,R30
000170 940e 02bd 	CALL _i2c_stop
000172 9626      	ADIW R28,6
000173 9508      	RET
                 ; .FEND
                 _rtc_get_date:
                 ; .FSTART _rtc_get_date
000174 93ba      	ST   -Y,R27
000175 93aa      	ST   -Y,R26
000176 940e 0277 	CALL SUBOPT_0x1
000178 e0a3      	LDI  R26,LOW(3)
000179 940e 027c 	CALL SUBOPT_0x2
00017b 940e 0280 	CALL SUBOPT_0x3
00017d 81ae      	LDD  R26,Y+6
00017e 81bf      	LDD  R27,Y+6+1
00017f 93ec      	ST   X,R30
000180 940e 028f 	CALL SUBOPT_0x5
000182 81ac      	LDD  R26,Y+4
000183 81bd      	LDD  R27,Y+4+1
000184 93ec      	ST   X,R30
000185 940e 028f 	CALL SUBOPT_0x5
000187 940e 0295 	CALL SUBOPT_0x6
000189 940e 0288 	CALL SUBOPT_0x4
00018b 940e 02bd 	CALL _i2c_stop
00018d 9628      	ADIW R28,8
00018e 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
00018f 93aa      	ST   -Y,R26
000190 b3eb      	IN   R30,0x1B
000191 70ef      	ANDI R30,LOW(0xF)
000192 2fae      	MOV  R26,R30
000193 81e8      	LD   R30,Y
000194 7fe0      	ANDI R30,LOW(0xF0)
000195 2bea      	OR   R30,R26
000196 bbeb      	OUT  0x1B,R30
                +
000197 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000198 958a     +DEC R24
000199 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00019a 9ada      	SBI  0x1B,2
                +
00019b e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00019c 958a     +DEC R24
00019d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00019e 98da      	CBI  0x1B,2
                +
00019f e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0001a0 958a     +DEC R24
0001a1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0001a2 c091      	RJMP _0x2100001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0001a3 93aa      	ST   -Y,R26
0001a4 81a8      	LD   R26,Y
0001a5 dfe9      	RCALL __lcd_write_nibble_G101
0001a6 81e8          ld    r30,y
0001a7 95e2          swap  r30
0001a8 83e8          st    y,r30
0001a9 81a8      	LD   R26,Y
0001aa dfe4      	RCALL __lcd_write_nibble_G101
                +
0001ab e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0001ac 958a     +DEC R24
0001ad f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0001ae c085      	RJMP _0x2100001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0001af 93aa      	ST   -Y,R26
0001b0 81e8      	LD   R30,Y
0001b1 e0f0      	LDI  R31,0
0001b2 58e8      	SUBI R30,LOW(-__base_y_G101)
0001b3 4ffd      	SBCI R31,HIGH(-__base_y_G101)
0001b4 81e0      	LD   R30,Z
0001b5 81a9      	LDD  R26,Y+1
0001b6 0fae      	ADD  R26,R30
0001b7 dfeb      	RCALL __lcd_write_data
0001b8 80a9      	LDD  R10,Y+1
0001b9 81e8      	LD   R30,Y
0001ba 93e0 027c 	STS  __lcd_y,R30
0001bc 9622      	ADIW R28,2
0001bd 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0001be e0a2      	LDI  R26,LOW(2)
0001bf 940e 029b 	CALL SUBOPT_0x7
0001c1 e0ac      	LDI  R26,LOW(12)
0001c2 dfe0      	RCALL __lcd_write_data
0001c3 e0a1      	LDI  R26,LOW(1)
0001c4 940e 029b 	CALL SUBOPT_0x7
0001c6 e0e0      	LDI  R30,LOW(0)
0001c7 93e0 027c 	STS  __lcd_y,R30
0001c9 2eae      	MOV  R10,R30
0001ca 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0001cb 93aa      	ST   -Y,R26
0001cc 81a8      	LD   R26,Y
0001cd 30aa      	CPI  R26,LOW(0xA)
0001ce f021      	BREQ _0x2020005
0001cf 91e0 027d 	LDS  R30,__lcd_maxx
0001d1 16ae      	CP   R10,R30
0001d2 f060      	BRLO _0x2020004
                 _0x2020005:
0001d3 e0e0      	LDI  R30,LOW(0)
0001d4 93ea      	ST   -Y,R30
0001d5 91a0 027c 	LDS  R26,__lcd_y
0001d7 5faf      	SUBI R26,-LOW(1)
0001d8 93a0 027c 	STS  __lcd_y,R26
0001da dfd4      	RCALL _lcd_gotoxy
0001db 81a8      	LD   R26,Y
0001dc 30aa      	CPI  R26,LOW(0xA)
0001dd f409      	BRNE _0x2020007
0001de c055      	RJMP _0x2100001
                 _0x2020007:
                 _0x2020004:
0001df 94a3      	INC  R10
0001e0 9ad8      	SBI  0x1B,0
0001e1 81a8      	LD   R26,Y
0001e2 dfc0      	RCALL __lcd_write_data
0001e3 98d8      	CBI  0x1B,0
0001e4 c04f      	RJMP _0x2100001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0001e5 93ba      	ST   -Y,R27
0001e6 93aa      	ST   -Y,R26
0001e7 931a      	ST   -Y,R17
                 _0x2020008:
0001e8 81a9      	LDD  R26,Y+1
0001e9 81ba      	LDD  R27,Y+1+1
0001ea 91ed      	LD   R30,X+
0001eb 83a9      	STD  Y+1,R26
0001ec 83ba      	STD  Y+1+1,R27
0001ed 2f1e      	MOV  R17,R30
0001ee 30e0      	CPI  R30,0
0001ef f019      	BREQ _0x202000A
0001f0 2fa1      	MOV  R26,R17
0001f1 dfd9      	RCALL _lcd_putchar
0001f2 cff5      	RJMP _0x2020008
                 _0x202000A:
0001f3 c010      	RJMP _0x2100002
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
0001f4 93ba      	ST   -Y,R27
0001f5 93aa      	ST   -Y,R26
0001f6 931a      	ST   -Y,R17
                 _0x202000B:
0001f7 81e9      	LDD  R30,Y+1
0001f8 81fa      	LDD  R31,Y+1+1
0001f9 9631      	ADIW R30,1
0001fa 83e9      	STD  Y+1,R30
0001fb 83fa      	STD  Y+1+1,R31
0001fc 9731      	SBIW R30,1
0001fd 91e4      	LPM  R30,Z
0001fe 2f1e      	MOV  R17,R30
0001ff 30e0      	CPI  R30,0
000200 f019      	BREQ _0x202000D
000201 2fa1      	MOV  R26,R17
000202 dfc8      	RCALL _lcd_putchar
000203 cff3      	RJMP _0x202000B
                 _0x202000D:
                 _0x2100002:
000204 8118      	LDD  R17,Y+0
                 _0x2100003:
000205 9623      	ADIW R28,3
000206 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000207 93aa      	ST   -Y,R26
000208 b3ea      	IN   R30,0x1A
000209 6fe0      	ORI  R30,LOW(0xF0)
00020a bbea      	OUT  0x1A,R30
00020b 9ad2      	SBI  0x1A,2
00020c 9ad0      	SBI  0x1A,0
00020d 9ad1      	SBI  0x1A,1
00020e 98da      	CBI  0x1B,2
00020f 98d8      	CBI  0x1B,0
000210 98d9      	CBI  0x1B,1
000211 81e8      	LD   R30,Y
000212 93e0 027d 	STS  __lcd_maxx,R30
000214 58e0      	SUBI R30,-LOW(128)
                +
000215 93e0 027a+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
000217 81e8      	LD   R30,Y
000218 54e0      	SUBI R30,-LOW(192)
                +
000219 93e0 027b+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
00021b e1a4      	LDI  R26,LOW(20)
00021c e0b0      	LDI  R27,0
00021d 940e 02fa 	CALL _delay_ms
00021f 940e 02a1 	CALL SUBOPT_0x8
000221 940e 02a1 	CALL SUBOPT_0x8
000223 940e 02a1 	CALL SUBOPT_0x8
000225 e2a0      	LDI  R26,LOW(32)
000226 df68      	RCALL __lcd_write_nibble_G101
                +
000227 ec88     +LDI R24 , LOW ( 200 )
000228 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000229 9701     +SBIW R24 , 1
00022a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00022b e2a8      	LDI  R26,LOW(40)
00022c df76      	RCALL __lcd_write_data
00022d e0a4      	LDI  R26,LOW(4)
00022e df74      	RCALL __lcd_write_data
00022f e8a5      	LDI  R26,LOW(133)
000230 df72      	RCALL __lcd_write_data
000231 e0a6      	LDI  R26,LOW(6)
000232 df70      	RCALL __lcd_write_data
000233 df8a      	RCALL _lcd_clear
                 _0x2100001:
000234 9621      	ADIW R28,1
000235 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
000236 93ba      	ST   -Y,R27
000237 93aa      	ST   -Y,R26
000238 91a9          ld   r26,y+
000239 91b9          ld   r27,y+
00023a 91e9          ld   r30,y+
00023b 91f9          ld   r31,y+
00023c 9630          adiw r30,0
00023d f42a          brpl __itoa0
00023e 95e0          com  r30
00023f 95f0          com  r31
000240 9631          adiw r30,1
000241 e26d          ldi  r22,'-'
000242 936d          st   x+,r22
                 __itoa0:
000243 94e8          clt
000244 e180          ldi  r24,low(10000)
000245 e297          ldi  r25,high(10000)
000246 d00d          rcall __itoa1
000247 ee88          ldi  r24,low(1000)
000248 e093          ldi  r25,high(1000)
000249 d00a          rcall __itoa1
00024a e684          ldi  r24,100
00024b 2799          clr  r25
00024c d007          rcall __itoa1
00024d e08a          ldi  r24,10
00024e d005          rcall __itoa1
00024f 2f6e          mov  r22,r30
000250 d010          rcall __itoa5
000251 2766          clr  r22
000252 936c          st   x,r22
000253 9508          ret
                 
                 __itoa1:
000254 2766          clr	 r22
                 __itoa2:
000255 17e8          cp   r30,r24
000256 07f9          cpc  r31,r25
000257 f020          brlo __itoa3
000258 9563          inc  r22
000259 1be8          sub  r30,r24
00025a 0bf9          sbc  r31,r25
00025b f7c9          brne __itoa2
                 __itoa3:
00025c 2366          tst  r22
00025d f411          brne __itoa4
00025e f016          brts __itoa5
00025f 9508          ret
                 __itoa4:
000260 9468          set
                 __itoa5:
000261 5d60          subi r22,-0x30
000262 936d          st   x+,r22
000263 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _bcd2bin:
                 ; .FSTART _bcd2bin
000264 93aa      	ST   -Y,R26
000265 81e8          ld   r30,y
000266 95e2          swap r30
000267 70ef          andi r30,0xf
000268 2fae          mov  r26,r30
000269 0faa          lsl  r26
00026a 0faa          lsl  r26
00026b 0fea          add  r30,r26
00026c 0fee          lsl  r30
00026d 91a9          ld   r26,y+
00026e 70af          andi r26,0xf
00026f 0fea          add  r30,r26
000270 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _s2:
00026e           	.BYTE 0x2
                 _s3:
000270           	.BYTE 0x2
                 _s4:
000272           	.BYTE 0x2
                 _s5:
000274           	.BYTE 0x2
                 _s6:
000276           	.BYTE 0x2
                 __base_y_G101:
000278           	.BYTE 0x4
                 __lcd_y:
00027c           	.BYTE 0x1
                 __lcd_maxx:
00027d           	.BYTE 0x1
                 __seed_G103:
00027e           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
000271 940e 01e5 	CALL _lcd_puts
                +
000273 e6ab     +LDI R26 , LOW ( 2 * _0x0 + ( 5 ) )
000274 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW2FN _0x0,5
000275 940c 01f4 	JMP  _lcd_putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
000277 940e 02ae 	CALL _i2c_start
000279 eda0      	LDI  R26,LOW(208)
00027a 940c 02e2 	JMP  _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
00027c 940e 02e2 	CALL _i2c_write
00027e 940c 02bd 	JMP  _i2c_stop
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000280 940e 02ae 	CALL _i2c_start
000282 eda1      	LDI  R26,LOW(209)
000283 940e 02e2 	CALL _i2c_write
000285 e0a1      	LDI  R26,LOW(1)
000286 940c 02c7 	JMP  _i2c_read
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000288 2fae      	MOV  R26,R30
000289 940e 0264 	CALL _bcd2bin
00028b 81a8      	LD   R26,Y
00028c 81b9      	LDD  R27,Y+1
00028d 93ec      	ST   X,R30
00028e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5:
00028f e0a1      	LDI  R26,LOW(1)
000290 940e 02c7 	CALL _i2c_read
000292 2fae      	MOV  R26,R30
000293 940c 0264 	JMP  _bcd2bin
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000295 81aa      	LDD  R26,Y+2
000296 81bb      	LDD  R27,Y+2+1
000297 93ec      	ST   X,R30
000298 e0a0      	LDI  R26,LOW(0)
000299 940c 02c7 	JMP  _i2c_read
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
00029b 940e 01a3 	CALL __lcd_write_data
00029d e0a3      	LDI  R26,LOW(3)
00029e e0b0      	LDI  R27,0
00029f 940c 02fa 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x8:
0002a1 e3a0      	LDI  R26,LOW(48)
0002a2 940e 018f 	CALL __lcd_write_nibble_G101
                +
0002a4 ec88     +LDI R24 , LOW ( 200 )
0002a5 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0002a6 9701     +SBIW R24 , 1
0002a7 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0002a8 9508      	RET
                 
                 
                 	.CSEG
                 	.equ __sda_bit=1
                 	.equ __scl_bit=0
                 	.equ __i2c_port=0x15 ;PORTC
                 	.equ __i2c_dir=__i2c_port-1
                 	.equ __i2c_pin=__i2c_port-2
                 
                 _i2c_init:
0002a9 98a8      	cbi  __i2c_port,__scl_bit
0002aa 98a9      	cbi  __i2c_port,__sda_bit
0002ab 9aa0      	sbi  __i2c_dir,__scl_bit
0002ac 98a1      	cbi  __i2c_dir,__sda_bit
0002ad c015      	rjmp __i2c_delay2
                 _i2c_start:
0002ae 98a1      	cbi  __i2c_dir,__sda_bit
0002af 98a0      	cbi  __i2c_dir,__scl_bit
0002b0 27ee      	clr  r30
0002b1 0000      	nop
0002b2 9b99      	sbis __i2c_pin,__sda_bit
0002b3 9508      	ret
0002b4 9b98      	sbis __i2c_pin,__scl_bit
0002b5 9508      	ret
0002b6 d004      	rcall __i2c_delay1
0002b7 9aa1      	sbi  __i2c_dir,__sda_bit
0002b8 d002      	rcall __i2c_delay1
0002b9 9aa0      	sbi  __i2c_dir,__scl_bit
0002ba e0e1      	ldi  r30,1
                 __i2c_delay1:
0002bb e06d      	ldi  r22,13
0002bc c007      	rjmp __i2c_delay2l
                 _i2c_stop:
0002bd 9aa1      	sbi  __i2c_dir,__sda_bit
0002be 9aa0      	sbi  __i2c_dir,__scl_bit
0002bf d003      	rcall __i2c_delay2
0002c0 98a0      	cbi  __i2c_dir,__scl_bit
0002c1 dff9      	rcall __i2c_delay1
0002c2 98a1      	cbi  __i2c_dir,__sda_bit
                 __i2c_delay2:
0002c3 e16b      	ldi  r22,27
                 __i2c_delay2l:
0002c4 956a      	dec  r22
0002c5 f7f1      	brne __i2c_delay2l
0002c6 9508      	ret
                 _i2c_read:
0002c7 e078      	ldi  r23,8
                 __i2c_read0:
0002c8 98a0      	cbi  __i2c_dir,__scl_bit
0002c9 dff1      	rcall __i2c_delay1
                 __i2c_read3:
0002ca 9b98      	sbis __i2c_pin,__scl_bit
0002cb cffe      	rjmp __i2c_read3
0002cc dfee      	rcall __i2c_delay1
0002cd 9488      	clc
0002ce 9999      	sbic __i2c_pin,__sda_bit
0002cf 9408      	sec
0002d0 9aa0      	sbi  __i2c_dir,__scl_bit
0002d1 dff1      	rcall __i2c_delay2
0002d2 1fee      	rol  r30
0002d3 957a      	dec  r23
0002d4 f799      	brne __i2c_read0
0002d5 2f7a      	mov  r23,r26
0002d6 2377      	tst  r23
0002d7 f411      	brne __i2c_read1
0002d8 98a1      	cbi  __i2c_dir,__sda_bit
0002d9 c001      	rjmp __i2c_read2
                 __i2c_read1:
0002da 9aa1      	sbi  __i2c_dir,__sda_bit
                 __i2c_read2:
0002db dfdf      	rcall __i2c_delay1
0002dc 98a0      	cbi  __i2c_dir,__scl_bit
0002dd dfe5      	rcall __i2c_delay2
0002de 9aa0      	sbi  __i2c_dir,__scl_bit
0002df dfdb      	rcall __i2c_delay1
0002e0 98a1      	cbi  __i2c_dir,__sda_bit
0002e1 cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
0002e2 e078      	ldi  r23,8
                 __i2c_write0:
0002e3 0faa      	lsl  r26
0002e4 f410      	brcc __i2c_write1
0002e5 98a1      	cbi  __i2c_dir,__sda_bit
0002e6 c001      	rjmp __i2c_write2
                 __i2c_write1:
0002e7 9aa1      	sbi  __i2c_dir,__sda_bit
                 __i2c_write2:
0002e8 dfda      	rcall __i2c_delay2
0002e9 98a0      	cbi  __i2c_dir,__scl_bit
0002ea dfd0      	rcall __i2c_delay1
                 __i2c_write3:
0002eb 9b98      	sbis __i2c_pin,__scl_bit
0002ec cffe      	rjmp __i2c_write3
0002ed dfcd      	rcall __i2c_delay1
0002ee 9aa0      	sbi  __i2c_dir,__scl_bit
0002ef 957a      	dec  r23
0002f0 f791      	brne __i2c_write0
0002f1 98a1      	cbi  __i2c_dir,__sda_bit
0002f2 dfc8      	rcall __i2c_delay1
0002f3 98a0      	cbi  __i2c_dir,__scl_bit
0002f4 dfce      	rcall __i2c_delay2
0002f5 e0e1      	ldi  r30,1
0002f6 9999      	sbic __i2c_pin,__sda_bit
0002f7 27ee      	clr  r30
0002f8 9aa0      	sbi  __i2c_dir,__scl_bit
0002f9 cfc1      	rjmp __i2c_delay1
                 
                 _delay_ms:
0002fa 9610      	adiw r26,0
0002fb f039      	breq __delay_ms1
                 __delay_ms0:
                +
0002fc ed80     +LDI R24 , LOW ( 0x7D0 )
0002fd e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0002fe 9701     +SBIW R24 , 1
0002ff f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000300 95a8      	wdr
000301 9711      	sbiw r26,1
000302 f7c9      	brne __delay_ms0
                 __delay_ms1:
000303 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :   4 r1 :   1 r2 :   0 r3 :   0 r4 :   1 r5 :   1 r6 :   0 r7 :   1 
r8 :   1 r9 :   1 r10:   4 r11:   1 r12:   2 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   7 r18:   0 r19:   0 r20:   0 r21:   0 r22:  15 r23:   6 
r24:  27 r25:  10 r26:  99 r27:  35 r28:   6 r29:   1 r30: 167 r31:  33 
x  :  12 y  :  96 z  :   9 
Registers used: 24 out of 35 (68.6%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   3 
adiw  :   9 and   :   0 andi  :   5 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :   7 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   2 
brlt  :   0 brmi  :   0 brne  :  18 brpl  :   1 brsh  :   0 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  46 
cbi   :  20 cbr   :   0 clc   :   1 clh   :   0 cli   :   1 cln   :   0 
clr   :   7 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   2 
cp    :   2 cpc   :   1 cpi   :   6 cpse  :   0 dec   :   8 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   2 inc   :   2 jmp   :  29 ld    :  21 ldd   :  21 ldi   : 105 
lds   :  22 lpm   :   9 lsl   :   4 lsr   :   0 mov   :  18 movw  :   5 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   1 or    :   1 
ori   :   3 out   :  42 pop   :   0 push  :   0 rcall :  49 ret   :  16 
reti  :   0 rjmp  :  19 rol   :   1 ror   :   0 sbc   :   1 sbci  :   1 
sbi   :  16 sbic  :   2 sbis  :   4 sbiw  :   8 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   1 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  60 std   :   7 sts   :   6 sub   :   1 subi  :   5 swap  :   2 
tst   :   2 wdr   :   1 
Instructions used: 55 out of 116 (47.4%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000608   1464     80   1544   32768   4.7%
[.dseg] 0x000060 0x000282      0     34     34    2048   1.7%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 12 warnings
