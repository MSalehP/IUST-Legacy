
AVRASM ver. 2.1.30  C:\Users\Lenovo\Desktop\5,6\Debug\List\5.asm Sat Jan 06 00:09:00 2024

                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004c 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 0a0d
000034 4920
000035 206e
000036 6874      	.DB  0xD,0xA,0x20,0x49,0x6E,0x20,0x74,0x68
000037 2065
000038 616e
000039 656d
00003a 6f20      	.DB  0x65,0x20,0x6E,0x61,0x6D,0x65,0x20,0x6F
00003b 2066
00003c 6f47
00003d 0d64
00003e 000a      	.DB  0x66,0x20,0x47,0x6F,0x64,0xD,0xA,0x0
00003f 756e
000040 626d
000041 7265
000042 3d20      	.DB  0x6E,0x75,0x6D,0x62,0x65,0x72,0x20,0x3D
000043 2520
000044 3330
000045 2064
000046 0d0a      	.DB  0x20,0x25,0x30,0x33,0x64,0x20,0xA,0xD
C:\Users\Lenovo\Desktop\5,6\Debug\List\5.asm(1128): warning: .cseg .db misalignment - padding zero byte
000047 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000048 0018      	.DW  0x18
000049 0260      	.DW  _0x7
00004a 0066      	.DW  _0x0*2
                 
                 _0xFFFFFFFF:
00004b 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00004c 94f8      	CLI
00004d 27ee      	CLR  R30
00004e bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004f e0f1      	LDI  R31,1
000050 bffb      	OUT  GICR,R31
000051 bfeb      	OUT  GICR,R30
000052 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000053 e08d      	LDI  R24,(14-2)+1
000054 e0a2      	LDI  R26,2
000055 27bb      	CLR  R27
                 __CLEAR_REG:
000056 93ed      	ST   X+,R30
000057 958a      	DEC  R24
000058 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000059 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005a e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005b e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00005c 93ed      	ST   X+,R30
00005d 9701      	SBIW R24,1
00005e f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00005f e9e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000060 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000061 9185      	LPM  R24,Z+
000062 9195      	LPM  R25,Z+
000063 9700      	SBIW R24,0
000064 f061      	BREQ __GLOBAL_INI_END
000065 91a5      	LPM  R26,Z+
000066 91b5      	LPM  R27,Z+
000067 9005      	LPM  R0,Z+
000068 9015      	LPM  R1,Z+
000069 01bf      	MOVW R22,R30
00006a 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006b 9005      	LPM  R0,Z+
00006c 920d      	ST   X+,R0
00006d 9701      	SBIW R24,1
00006e f7e1      	BRNE __GLOBAL_INI_LOOP
00006f 01fb      	MOVW R30,R22
000070 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000071 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000072 bfed      	OUT  SPL,R30
000073 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000074 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000075 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000076 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000077 940c 0079 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <stdbool.h>
                 ;
                 ;void usart_send_string(char *str);
                 ;void main(void)
                 ; 0000 0008 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0009 
                 ; 0000 000A int switchNumber;
                 ; 0000 000B int checker;
                 ; 0000 000C bool counter = false;
                 ; 0000 000D 
                 ; 0000 000E DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
                 ;	switchNumber -> R16,R17
                 ;	checker -> R18,R19
                 ;	counter -> R21
000079 e050      	LDI  R21,0
00007a e0e0      	LDI  R30,LOW(0)
00007b bbe4      	OUT  0x14,R30
                 ; 0000 000F PORTC=(1<<PORTC7) | (1<<PORTC6) | (1<<PORTC5) | (1<<PORTC4) | (1<<PORTC3) | (1<<PORTC2) | (1<<PORTC1) | (1<<PORTC0);
00007c efef      	LDI  R30,LOW(255)
00007d bbe5      	OUT  0x15,R30
                 ; 0000 0010 
                 ; 0000 0011 DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
00007e bbe1      	OUT  0x11,R30
                 ; 0000 0012 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
00007f e0e0      	LDI  R30,LOW(0)
000080 bbe2      	OUT  0x12,R30
                 ; 0000 0013 
                 ; 0000 0014 // Timer/Counter 0 initialization
                 ; 0000 0015 // Clock source: System Clock
                 ; 0000 0016 // Clock value: Timer 0 Stopped
                 ; 0000 0017 // Mode: Normal top=0xFF
                 ; 0000 0018 // OC0 output: Disconnected
                 ; 0000 0019 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
000081 bfe3      	OUT  0x33,R30
                 ; 0000 001A TCNT0=0x00;
000082 bfe2      	OUT  0x32,R30
                 ; 0000 001B OCR0=0x00;
000083 bfec      	OUT  0x3C,R30
                 ; 0000 001C 
                 ; 0000 001D // Timer/Counter 1 initialization
                 ; 0000 001E // Clock source: System Clock
                 ; 0000 001F // Clock value: Timer1 Stopped
                 ; 0000 0020 // Mode: Normal top=0xFFFF
                 ; 0000 0021 // OC1A output: Disconnected
                 ; 0000 0022 // OC1B output: Disconnected
                 ; 0000 0023 // Noise Canceler: Off
                 ; 0000 0024 // Input Capture on Falling Edge
                 ; 0000 0025 // Timer1 Overflow Interrupt: Off
                 ; 0000 0026 // Input Capture Interrupt: Off
                 ; 0000 0027 // Compare A Match Interrupt: Off
                 ; 0000 0028 // Compare B Match Interrupt: Off
                 ; 0000 0029 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000084 bdef      	OUT  0x2F,R30
                 ; 0000 002A TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
000085 bdee      	OUT  0x2E,R30
                 ; 0000 002B TCNT1H=0x00;
000086 bded      	OUT  0x2D,R30
                 ; 0000 002C TCNT1L=0x00;
000087 bdec      	OUT  0x2C,R30
                 ; 0000 002D ICR1H=0x00;
000088 bde7      	OUT  0x27,R30
                 ; 0000 002E ICR1L=0x00;
000089 bde6      	OUT  0x26,R30
                 ; 0000 002F OCR1AH=0x00;
00008a bdeb      	OUT  0x2B,R30
                 ; 0000 0030 OCR1AL=0x00;
00008b bdea      	OUT  0x2A,R30
                 ; 0000 0031 OCR1BH=0x00;
00008c bde9      	OUT  0x29,R30
                 ; 0000 0032 OCR1BL=0x00;
00008d bde8      	OUT  0x28,R30
                 ; 0000 0033 
                 ; 0000 0034 // Timer/Counter 2 initialization
                 ; 0000 0035 // Clock source: System Clock
                 ; 0000 0036 // Clock value: Timer2 Stopped
                 ; 0000 0037 // Mode: Normal top=0xFF
                 ; 0000 0038 // OC2 output: Disconnected
                 ; 0000 0039 ASSR=0<<AS2;
00008e bde2      	OUT  0x22,R30
                 ; 0000 003A TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
00008f bde5      	OUT  0x25,R30
                 ; 0000 003B TCNT2=0x00;
000090 bde4      	OUT  0x24,R30
                 ; 0000 003C OCR2=0x00;
000091 bde3      	OUT  0x23,R30
                 ; 0000 003D 
                 ; 0000 003E // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 003F TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
000092 bfe9      	OUT  0x39,R30
                 ; 0000 0040 
                 ; 0000 0041 // External Interrupt(s) initialization
                 ; 0000 0042 // INT0: Off
                 ; 0000 0043 // INT1: Off
                 ; 0000 0044 // INT2: Off
                 ; 0000 0045 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
000093 bfe5      	OUT  0x35,R30
                 ; 0000 0046 MCUCSR=(0<<ISC2);
000094 bfe4      	OUT  0x34,R30
                 ; 0000 0047 
                 ; 0000 0048 // USART initialization
                 ; 0000 0049 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 004A // USART Receiver: On
                 ; 0000 004B // USART Transmitter: On
                 ; 0000 004C // USART Mode: Asynchronous
                 ; 0000 004D // USART Baud Rate: 9600
                 ; 0000 004E UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) | (0<<MPCM);
000095 b9eb      	OUT  0xB,R30
                 ; 0000 004F UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (1<<RXEN) | (1<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
000096 e1e8      	LDI  R30,LOW(24)
000097 b9ea      	OUT  0xA,R30
                 ; 0000 0050 UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
000098 e8e6      	LDI  R30,LOW(134)
000099 bde0      	OUT  0x20,R30
                 ; 0000 0051 UBRRH=0x00;
00009a e0e0      	LDI  R30,LOW(0)
00009b bde0      	OUT  0x20,R30
                 ; 0000 0052 UBRRL=0x33;
00009c e3e3      	LDI  R30,LOW(51)
00009d b9e9      	OUT  0x9,R30
                 ; 0000 0053 
                 ; 0000 0054 // Analog Comparator initialization
                 ; 0000 0055 // Analog Comparator: Off
                 ; 0000 0056 // The Analog Comparator's positive input is
                 ; 0000 0057 // connected to the AIN0 pin
                 ; 0000 0058 // The Analog Comparator's negative input is
                 ; 0000 0059 // connected to the AIN1 pin
                 ; 0000 005A ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
00009e e8e0      	LDI  R30,LOW(128)
00009f b9e8      	OUT  0x8,R30
                 ; 0000 005B SFIOR=(0<<ACME);
0000a0 e0e0      	LDI  R30,LOW(0)
0000a1 bfe0      	OUT  0x30,R30
                 ; 0000 005C 
                 ; 0000 005D // ADC initialization
                 ; 0000 005E // ADC disabled
                 ; 0000 005F ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0000a2 b9e6      	OUT  0x6,R30
                 ; 0000 0060 
                 ; 0000 0061 // SPI initialization
                 ; 0000 0062 // SPI disabled
                 ; 0000 0063 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0000a3 b9ed      	OUT  0xD,R30
                 ; 0000 0064 
                 ; 0000 0065 // TWI initialization
                 ; 0000 0066 // TWI disabled
                 ; 0000 0067 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0000a4 bfe6      	OUT  0x36,R30
                 ; 0000 0068 
                 ; 0000 0069 
                 ; 0000 006A 
                 ; 0000 006B while (1)
                 _0x3:
                 ; 0000 006C     {
                 ; 0000 006D         if(!counter) {
0000a5 3050      	CPI  R21,0
0000a6 f441      	BRNE _0x6
                 ; 0000 006E             usart_send_string("\r\n In the name of God\r\n");
                +
0000a7 e6a0     +LDI R26 , LOW ( _0x7 + ( 0 ) )
0000a8 e0b2     +LDI R27 , HIGH ( _0x7 + ( 0 ) )
                 	__POINTW2MN _0x7,0
0000a9 d00e      	RCALL _usart_send_string
                 ; 0000 006F             counter=true ;
0000aa e051      	LDI  R21,LOW(1)
                 ; 0000 0070             switchNumber = PINC;
0000ab b303      	IN   R16,19
0000ac 2711      	CLR  R17
                 ; 0000 0071             checker = switchNumber;
0000ad 940e 0256 	CALL SUBOPT_0x0
                 ; 0000 0072             printf("number = %03d \n\r",switchNumber);
                 ; 0000 0073         }
                 ; 0000 0074         switchNumber = PINC;
                 _0x6:
0000af b303      	IN   R16,19
0000b0 2711      	CLR  R17
                 ; 0000 0075         if(switchNumber != checker)
                +
0000b1 1720     +CP R18 , R16
0000b2 0731     +CPC R19 , R17
                 	__CPWRR 18,19,16,17
0000b3 f011      	BREQ _0x8
                 ; 0000 0076         {
                 ; 0000 0077             checker = switchNumber;
0000b4 940e 0256 	CALL SUBOPT_0x0
                 ; 0000 0078             printf("number = %03d \n\r",switchNumber);
                 ; 0000 0079         }
                 ; 0000 007A 
                 ; 0000 007B     }
                 _0x8:
0000b6 cfee      	RJMP _0x3
                 ; 0000 007C }
                 _0x9:
0000b7 cfff      	RJMP _0x9
                 ; .FEND
                 
                 	.DSEG
                 _0x7:
000260           	.BYTE 0x18
                 ;void usart_send_string(char *str)
                 ; 0000 007E {
                 
                 	.CSEG
                 _usart_send_string:
                 ; .FSTART _usart_send_string
                 ; 0000 007F     unsigned char i = 0;
                 ; 0000 0080     for(i=0;str[i];i++)
0000b8 93ba      	ST   -Y,R27
0000b9 93aa      	ST   -Y,R26
0000ba 931a      	ST   -Y,R17
                 ;	*str -> Y+1
                 ;	i -> R17
0000bb e010      	LDI  R17,0
0000bc e010      	LDI  R17,LOW(0)
                 _0xB:
0000bd 81a9      	LDD  R26,Y+1
0000be 81ba      	LDD  R27,Y+1+1
0000bf 27ee      	CLR  R30
0000c0 0fa1      	ADD  R26,R17
0000c1 1fbe      	ADC  R27,R30
0000c2 91ec      	LD   R30,X
0000c3 30e0      	CPI  R30,0
0000c4 f049      	BREQ _0xC
                 ; 0000 0081     putchar(str[i]);
0000c5 81a9      	LDD  R26,Y+1
0000c6 81ba      	LDD  R27,Y+1+1
0000c7 27ee      	CLR  R30
0000c8 0fa1      	ADD  R26,R17
0000c9 1fbe      	ADC  R27,R30
0000ca 91ac      	LD   R26,X
0000cb d004      	RCALL _putchar
0000cc 5f1f      	SUBI R17,-1
0000cd cfef      	RJMP _0xB
                 _0xC:
                 ; 0000 0082 }
0000ce 8118      	LDD  R17,Y+0
0000cf c012      	RJMP _0x2060001
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
0000d0 93aa      	ST   -Y,R26
                 putchar0:
0000d1 9b5d           sbis usr,udre
0000d2 cffe           rjmp putchar0
0000d3 81e8           ld   r30,y
0000d4 b9ec           out  udr,r30
0000d5 9621      	ADIW R28,1
0000d6 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
0000d7 93ba      	ST   -Y,R27
0000d8 93aa      	ST   -Y,R26
0000d9 81aa      	LDD  R26,Y+2
0000da dff5      	RCALL _putchar
0000db 81a8      	LD   R26,Y
0000dc 81b9      	LDD  R27,Y+1
0000dd 91ed      	LD   R30,X+
0000de 91fd      	LD   R31,X+
0000df 9631      	ADIW R30,1
0000e0 93fe      	ST   -X,R31
0000e1 93ee      	ST   -X,R30
                 _0x2060001:
0000e2 9623      	ADIW R28,3
0000e3 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0000e4 93ba      	ST   -Y,R27
0000e5 93aa      	ST   -Y,R26
0000e6 9726      	SBIW R28,6
0000e7 940e 02a4 	CALL __SAVELOCR6
0000e9 e010      	LDI  R17,0
0000ea 85ac      	LDD  R26,Y+12
0000eb 85bd      	LDD  R27,Y+12+1
0000ec e0e0      	LDI  R30,LOW(0)
0000ed e0f0      	LDI  R31,HIGH(0)
0000ee 93ed      	ST   X+,R30
0000ef 93fc      	ST   X,R31
                 _0x2000016:
0000f0 89ea      	LDD  R30,Y+18
0000f1 89fb      	LDD  R31,Y+18+1
0000f2 9631      	ADIW R30,1
0000f3 8bea      	STD  Y+18,R30
0000f4 8bfb      	STD  Y+18+1,R31
0000f5 9731      	SBIW R30,1
0000f6 91e4      	LPM  R30,Z
0000f7 2f2e      	MOV  R18,R30
0000f8 30e0      	CPI  R30,0
0000f9 f409      	BRNE PC+2
0000fa c115      	RJMP _0x2000018
0000fb 2fe1      	MOV  R30,R17
0000fc 30e0      	CPI  R30,0
0000fd f439      	BRNE _0x200001C
0000fe 3225      	CPI  R18,37
0000ff f411      	BRNE _0x200001D
000100 e011      	LDI  R17,LOW(1)
000101 c002      	RJMP _0x200001E
                 _0x200001D:
000102 940e 0265 	CALL SUBOPT_0x1
                 _0x200001E:
000104 c10a      	RJMP _0x200001B
                 _0x200001C:
000105 30e1      	CPI  R30,LOW(0x1)
000106 f4a9      	BRNE _0x200001F
000107 3225      	CPI  R18,37
000108 f419      	BRNE _0x2000020
000109 940e 0265 	CALL SUBOPT_0x1
00010b c102      	RJMP _0x20000CC
                 _0x2000020:
00010c e012      	LDI  R17,LOW(2)
00010d e040      	LDI  R20,LOW(0)
00010e e000      	LDI  R16,LOW(0)
00010f 322d      	CPI  R18,45
000110 f411      	BRNE _0x2000021
000111 e001      	LDI  R16,LOW(1)
000112 c0fc      	RJMP _0x200001B
                 _0x2000021:
000113 322b      	CPI  R18,43
000114 f411      	BRNE _0x2000022
000115 e24b      	LDI  R20,LOW(43)
000116 c0f8      	RJMP _0x200001B
                 _0x2000022:
000117 3220      	CPI  R18,32
000118 f411      	BRNE _0x2000023
000119 e240      	LDI  R20,LOW(32)
00011a c0f4      	RJMP _0x200001B
                 _0x2000023:
00011b c002      	RJMP _0x2000024
                 _0x200001F:
00011c 30e2      	CPI  R30,LOW(0x2)
00011d f439      	BRNE _0x2000025
                 _0x2000024:
00011e e050      	LDI  R21,LOW(0)
00011f e013      	LDI  R17,LOW(3)
000120 3320      	CPI  R18,48
000121 f411      	BRNE _0x2000026
000122 6800      	ORI  R16,LOW(128)
000123 c0eb      	RJMP _0x200001B
                 _0x2000026:
000124 c003      	RJMP _0x2000027
                 _0x2000025:
000125 30e3      	CPI  R30,LOW(0x3)
000126 f009      	BREQ PC+2
000127 c0e7      	RJMP _0x200001B
                 _0x2000027:
000128 3320      	CPI  R18,48
000129 f010      	BRLO _0x200002A
00012a 332a      	CPI  R18,58
00012b f008      	BRLO _0x200002B
                 _0x200002A:
00012c c007      	RJMP _0x2000029
                 _0x200002B:
00012d e0aa      	LDI  R26,LOW(10)
00012e 9f5a      	MUL  R21,R26
00012f 2d50      	MOV  R21,R0
000130 2fe2      	MOV  R30,R18
000131 53e0      	SUBI R30,LOW(48)
000132 0f5e      	ADD  R21,R30
000133 c0db      	RJMP _0x200001B
                 _0x2000029:
000134 2fe2      	MOV  R30,R18
000135 36e3      	CPI  R30,LOW(0x63)
000136 f449      	BRNE _0x200002F
000137 940e 026c 	CALL SUBOPT_0x2
000139 89e8      	LDD  R30,Y+16
00013a 89f9      	LDD  R31,Y+16+1
00013b 81a4      	LDD  R26,Z+4
00013c 93aa      	ST   -Y,R26
00013d 940e 0272 	CALL SUBOPT_0x3
00013f c0ce      	RJMP _0x2000030
                 _0x200002F:
000140 37e3      	CPI  R30,LOW(0x73)
000141 f441      	BRNE _0x2000032
000142 940e 026c 	CALL SUBOPT_0x2
000144 940e 0278 	CALL SUBOPT_0x4
000146 940e 023d 	CALL _strlen
000148 2f1e      	MOV  R17,R30
000149 c00a      	RJMP _0x2000033
                 _0x2000032:
00014a 37e0      	CPI  R30,LOW(0x70)
00014b f461      	BRNE _0x2000035
00014c 940e 026c 	CALL SUBOPT_0x2
00014e 940e 0278 	CALL SUBOPT_0x4
000150 940e 0249 	CALL _strlenf
000152 2f1e      	MOV  R17,R30
000153 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000154 6002      	ORI  R16,LOW(2)
000155 770f      	ANDI R16,LOW(127)
000156 e030      	LDI  R19,LOW(0)
000157 c034      	RJMP _0x2000036
                 _0x2000035:
000158 36e4      	CPI  R30,LOW(0x64)
000159 f011      	BREQ _0x2000039
00015a 36e9      	CPI  R30,LOW(0x69)
00015b f411      	BRNE _0x200003A
                 _0x2000039:
00015c 6004      	ORI  R16,LOW(4)
00015d c002      	RJMP _0x200003B
                 _0x200003A:
00015e 37e5      	CPI  R30,LOW(0x75)
00015f f431      	BRNE _0x200003C
                 _0x200003B:
000160 e5e4      	LDI  R30,LOW(_tbl10_G100*2)
000161 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000162 83ee      	STD  Y+6,R30
000163 83ff      	STD  Y+6+1,R31
000164 e015      	LDI  R17,LOW(5)
000165 c00c      	RJMP _0x200003D
                 _0x200003C:
000166 35e8      	CPI  R30,LOW(0x58)
000167 f411      	BRNE _0x200003F
000168 6008      	ORI  R16,LOW(8)
000169 c003      	RJMP _0x2000040
                 _0x200003F:
00016a 37e8      	CPI  R30,LOW(0x78)
00016b f009      	BREQ PC+2
00016c c0a1      	RJMP _0x2000071
                 _0x2000040:
00016d e5ee      	LDI  R30,LOW(_tbl16_G100*2)
00016e e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
00016f 83ee      	STD  Y+6,R30
000170 83ff      	STD  Y+6+1,R31
000171 e014      	LDI  R17,LOW(4)
                 _0x200003D:
000172 ff02      	SBRS R16,2
000173 c014      	RJMP _0x2000042
000174 940e 026c 	CALL SUBOPT_0x2
000176 940e 0282 	CALL SUBOPT_0x5
000178 85ab      	LDD  R26,Y+11
000179 23aa      	TST  R26
00017a f43a      	BRPL _0x2000043
00017b 85ea      	LDD  R30,Y+10
00017c 85fb      	LDD  R31,Y+10+1
00017d 940e 028e 	CALL __ANEGW1
00017f 87ea      	STD  Y+10,R30
000180 87fb      	STD  Y+10+1,R31
000181 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
000182 3040      	CPI  R20,0
000183 f011      	BREQ _0x2000044
000184 5f1f      	SUBI R17,-LOW(1)
000185 c001      	RJMP _0x2000045
                 _0x2000044:
000186 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
000187 c004      	RJMP _0x2000046
                 _0x2000042:
000188 940e 026c 	CALL SUBOPT_0x2
00018a 940e 0282 	CALL SUBOPT_0x5
                 _0x2000046:
                 _0x2000036:
00018c fd00      	SBRC R16,0
00018d c011      	RJMP _0x2000047
                 _0x2000048:
00018e 1715      	CP   R17,R21
00018f f478      	BRSH _0x200004A
000190 ff07      	SBRS R16,7
000191 c008      	RJMP _0x200004B
000192 ff02      	SBRS R16,2
000193 c004      	RJMP _0x200004C
000194 7f0b      	ANDI R16,LOW(251)
000195 2f24      	MOV  R18,R20
000196 5011      	SUBI R17,LOW(1)
000197 c001      	RJMP _0x200004D
                 _0x200004C:
000198 e320      	LDI  R18,LOW(48)
                 _0x200004D:
000199 c001      	RJMP _0x200004E
                 _0x200004B:
00019a e220      	LDI  R18,LOW(32)
                 _0x200004E:
00019b 940e 0265 	CALL SUBOPT_0x1
00019d 5051      	SUBI R21,LOW(1)
00019e cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
00019f 2f31      	MOV  R19,R17
0001a0 ff01      	SBRS R16,1
0001a1 c017      	RJMP _0x200004F
                 _0x2000050:
0001a2 3030      	CPI  R19,0
0001a3 f0a1      	BREQ _0x2000052
0001a4 ff03      	SBRS R16,3
0001a5 c006      	RJMP _0x2000053
0001a6 81ee      	LDD  R30,Y+6
0001a7 81ff      	LDD  R31,Y+6+1
0001a8 9125      	LPM  R18,Z+
0001a9 83ee      	STD  Y+6,R30
0001aa 83ff      	STD  Y+6+1,R31
0001ab c005      	RJMP _0x2000054
                 _0x2000053:
0001ac 81ae      	LDD  R26,Y+6
0001ad 81bf      	LDD  R27,Y+6+1
0001ae 912d      	LD   R18,X+
0001af 83ae      	STD  Y+6,R26
0001b0 83bf      	STD  Y+6+1,R27
                 _0x2000054:
0001b1 940e 0265 	CALL SUBOPT_0x1
0001b3 3050      	CPI  R21,0
0001b4 f009      	BREQ _0x2000055
0001b5 5051      	SUBI R21,LOW(1)
                 _0x2000055:
0001b6 5031      	SUBI R19,LOW(1)
0001b7 cfea      	RJMP _0x2000050
                 _0x2000052:
0001b8 c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
0001b9 e320      	LDI  R18,LOW(48)
0001ba 81ee      	LDD  R30,Y+6
0001bb 81ff      	LDD  R31,Y+6+1
0001bc 940e 029b 	CALL __GETW1PF
0001be 87e8      	STD  Y+8,R30
0001bf 87f9      	STD  Y+8+1,R31
0001c0 81ee      	LDD  R30,Y+6
0001c1 81ff      	LDD  R31,Y+6+1
0001c2 9632      	ADIW R30,2
0001c3 83ee      	STD  Y+6,R30
0001c4 83ff      	STD  Y+6+1,R31
                 _0x200005A:
0001c5 85e8      	LDD  R30,Y+8
0001c6 85f9      	LDD  R31,Y+8+1
0001c7 85aa      	LDD  R26,Y+10
0001c8 85bb      	LDD  R27,Y+10+1
0001c9 17ae      	CP   R26,R30
0001ca 07bf      	CPC  R27,R31
0001cb f050      	BRLO _0x200005C
0001cc 5f2f      	SUBI R18,-LOW(1)
0001cd 85a8      	LDD  R26,Y+8
0001ce 85b9      	LDD  R27,Y+8+1
0001cf 85ea      	LDD  R30,Y+10
0001d0 85fb      	LDD  R31,Y+10+1
0001d1 1bea      	SUB  R30,R26
0001d2 0bfb      	SBC  R31,R27
0001d3 87ea      	STD  Y+10,R30
0001d4 87fb      	STD  Y+10+1,R31
0001d5 cfef      	RJMP _0x200005A
                 _0x200005C:
0001d6 332a      	CPI  R18,58
0001d7 f028      	BRLO _0x200005D
0001d8 ff03      	SBRS R16,3
0001d9 c002      	RJMP _0x200005E
0001da 5f29      	SUBI R18,-LOW(7)
0001db c001      	RJMP _0x200005F
                 _0x200005E:
0001dc 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
0001dd fd04      	SBRC R16,4
0001de c01a      	RJMP _0x2000061
0001df 3321      	CPI  R18,49
0001e0 f420      	BRSH _0x2000063
0001e1 85a8      	LDD  R26,Y+8
0001e2 85b9      	LDD  R27,Y+8+1
0001e3 9711      	SBIW R26,1
0001e4 f409      	BRNE _0x2000062
                 _0x2000063:
0001e5 c009      	RJMP _0x20000CD
                 _0x2000062:
0001e6 1753      	CP   R21,R19
0001e7 f010      	BRLO _0x2000067
0001e8 ff00      	SBRS R16,0
0001e9 c001      	RJMP _0x2000068
                 _0x2000067:
0001ea c013      	RJMP _0x2000066
                 _0x2000068:
0001eb e220      	LDI  R18,LOW(32)
0001ec ff07      	SBRS R16,7
0001ed c00b      	RJMP _0x2000069
0001ee e320      	LDI  R18,LOW(48)
                 _0x20000CD:
0001ef 6100      	ORI  R16,LOW(16)
0001f0 ff02      	SBRS R16,2
0001f1 c007      	RJMP _0x200006A
0001f2 7f0b      	ANDI R16,LOW(251)
0001f3 934a      	ST   -Y,R20
0001f4 940e 0272 	CALL SUBOPT_0x3
0001f6 3050      	CPI  R21,0
0001f7 f009      	BREQ _0x200006B
0001f8 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
0001f9 940e 0265 	CALL SUBOPT_0x1
0001fb 3050      	CPI  R21,0
0001fc f009      	BREQ _0x200006C
0001fd 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
0001fe 5031      	SUBI R19,LOW(1)
0001ff 85a8      	LDD  R26,Y+8
000200 85b9      	LDD  R27,Y+8+1
000201 9712      	SBIW R26,2
000202 f008      	BRLO _0x2000059
000203 cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
000204 ff00      	SBRS R16,0
000205 c008      	RJMP _0x200006D
                 _0x200006E:
000206 3050      	CPI  R21,0
000207 f031      	BREQ _0x2000070
000208 5051      	SUBI R21,LOW(1)
000209 e2e0      	LDI  R30,LOW(32)
00020a 93ea      	ST   -Y,R30
00020b 940e 0272 	CALL SUBOPT_0x3
00020d cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
00020e e010      	LDI  R17,LOW(0)
                 _0x200001B:
00020f cee0      	RJMP _0x2000016
                 _0x2000018:
000210 85ac      	LDD  R26,Y+12
000211 85bd      	LDD  R27,Y+12+1
000212 940e 0297 	CALL __GETW1P
000214 940e 02ab 	CALL __LOADLOCR6
000216 9664      	ADIW R28,20
000217 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
000218 92ff      	PUSH R15
000219 2ef8      	MOV  R15,R24
00021a 9726      	SBIW R28,6
00021b 931a      	ST   -Y,R17
00021c 930a      	ST   -Y,R16
00021d 01de      	MOVW R26,R28
00021e 9614      	ADIW R26,4
00021f 940e 028a 	CALL __ADDW2R15
000221 018d      	MOVW R16,R26
000222 e0e0      	LDI  R30,LOW(0)
000223 83ec      	STD  Y+4,R30
000224 83ed      	STD  Y+4+1,R30
000225 83ee      	STD  Y+6,R30
000226 83ef      	STD  Y+6+1,R30
000227 01de      	MOVW R26,R28
000228 9618      	ADIW R26,8
000229 940e 028a 	CALL __ADDW2R15
00022b 940e 0297 	CALL __GETW1P
00022d 93fa      	ST   -Y,R31
00022e 93ea      	ST   -Y,R30
00022f 931a      	ST   -Y,R17
000230 930a      	ST   -Y,R16
000231 ede7      	LDI  R30,LOW(_put_usart_G100)
000232 e0f0      	LDI  R31,HIGH(_put_usart_G100)
000233 93fa      	ST   -Y,R31
000234 93ea      	ST   -Y,R30
000235 01de      	MOVW R26,R28
000236 9618      	ADIW R26,8
000237 deac      	RCALL __print_G100
000238 8119      	LDD  R17,Y+1
000239 8108      	LDD  R16,Y+0
00023a 9628      	ADIW R28,8
00023b 90ff      	POP  R15
00023c 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
00023d 93ba      	ST   -Y,R27
00023e 93aa      	ST   -Y,R26
00023f 91a9          ld   r26,y+
000240 91b9          ld   r27,y+
000241 27ee          clr  r30
000242 27ff          clr  r31
                 strlen0:
000243 916d          ld   r22,x+
000244 2366          tst  r22
000245 f011          breq strlen1
000246 9631          adiw r30,1
000247 cffb          rjmp strlen0
                 strlen1:
000248 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000249 93ba      	ST   -Y,R27
00024a 93aa      	ST   -Y,R26
00024b 27aa          clr  r26
00024c 27bb          clr  r27
00024d 91e9          ld   r30,y+
00024e 91f9          ld   r31,y+
                 strlenf0:
00024f 9005      	lpm  r0,z+
000250 2000          tst  r0
000251 f011          breq strlenf1
000252 9611          adiw r26,1
000253 cffb          rjmp strlenf0
                 strlenf1:
000254 01fd          movw r30,r26
000255 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
000256 0198      	MOVW R18,R16
                +
000257 e7ee     +LDI R30 , LOW ( 2 * _0x0 + ( 24 ) )
000258 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 24 ) )
                 	__POINTW1FN _0x0,24
000259 93fa      	ST   -Y,R31
00025a 93ea      	ST   -Y,R30
00025b 01f8      	MOVW R30,R16
00025c 940e 0292 	CALL __CWD1
00025e 940e 029f 	CALL __PUTPARD1
000260 e084      	LDI  R24,4
000261 940e 0218 	CALL _printf
000263 9626      	ADIW R28,6
000264 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1:
000265 932a      	ST   -Y,R18
000266 85ad      	LDD  R26,Y+13
000267 85be      	LDD  R27,Y+13+1
000268 85ef      	LDD  R30,Y+15
000269 89f8      	LDD  R31,Y+15+1
00026a 9509      	ICALL
00026b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2:
00026c 89e8      	LDD  R30,Y+16
00026d 89f9      	LDD  R31,Y+16+1
00026e 9734      	SBIW R30,4
00026f 8be8      	STD  Y+16,R30
000270 8bf9      	STD  Y+16+1,R31
000271 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000272 85ad      	LDD  R26,Y+13
000273 85be      	LDD  R27,Y+13+1
000274 85ef      	LDD  R30,Y+15
000275 89f8      	LDD  R31,Y+15+1
000276 9509      	ICALL
000277 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
000278 89a8      	LDD  R26,Y+16
000279 89b9      	LDD  R27,Y+16+1
00027a 9614      	ADIW R26,4
00027b 940e 0297 	CALL __GETW1P
00027d 83ee      	STD  Y+6,R30
00027e 83ff      	STD  Y+6+1,R31
00027f 81ae      	LDD  R26,Y+6
000280 81bf      	LDD  R27,Y+6+1
000281 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
000282 89a8      	LDD  R26,Y+16
000283 89b9      	LDD  R27,Y+16+1
000284 9614      	ADIW R26,4
000285 940e 0297 	CALL __GETW1P
000287 87ea      	STD  Y+10,R30
000288 87fb      	STD  Y+10+1,R31
000289 9508      	RET
                 
                 
                 	.CSEG
                 __ADDW2R15:
00028a 2400      	CLR  R0
00028b 0daf      	ADD  R26,R15
00028c 1db0      	ADC  R27,R0
00028d 9508      	RET
                 
                 __ANEGW1:
00028e 95f1      	NEG  R31
00028f 95e1      	NEG  R30
000290 40f0      	SBCI R31,0
000291 9508      	RET
                 
                 __CWD1:
000292 2f6f      	MOV  R22,R31
000293 0f66      	ADD  R22,R22
000294 0b66      	SBC  R22,R22
000295 2f76      	MOV  R23,R22
000296 9508      	RET
                 
                 __GETW1P:
000297 91ed      	LD   R30,X+
000298 91fc      	LD   R31,X
000299 9711      	SBIW R26,1
00029a 9508      	RET
                 
                 __GETW1PF:
00029b 9005      	LPM  R0,Z+
00029c 91f4      	LPM  R31,Z
00029d 2de0      	MOV  R30,R0
00029e 9508      	RET
                 
                 __PUTPARD1:
00029f 937a      	ST   -Y,R23
0002a0 936a      	ST   -Y,R22
0002a1 93fa      	ST   -Y,R31
0002a2 93ea      	ST   -Y,R30
0002a3 9508      	RET
                 
                 __SAVELOCR6:
0002a4 935a      	ST   -Y,R21
                 __SAVELOCR5:
0002a5 934a      	ST   -Y,R20
                 __SAVELOCR4:
0002a6 933a      	ST   -Y,R19
                 __SAVELOCR3:
0002a7 932a      	ST   -Y,R18
                 __SAVELOCR2:
0002a8 931a      	ST   -Y,R17
0002a9 930a      	ST   -Y,R16
0002aa 9508      	RET
                 
                 __LOADLOCR6:
0002ab 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0002ac 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0002ad 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0002ae 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0002af 8119      	LDD  R17,Y+1
0002b0 8108      	LD   R16,Y
0002b1 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  11 r1 :   1 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  35 r17:  29 r18:  29 r19:   9 r20:   9 r21:  20 r22:  11 r23:   2 
r24:   9 r25:   2 r26:  55 r27:  31 r28:  11 r29:   1 r30: 143 r31:  46 
x  :  15 y  : 132 z  :  13 
Registers used: 22 out of 35 (62.9%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   3 add   :   5 
adiw  :  15 and   :   0 andi  :   4 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  14 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   0 brmi  :   0 brne  :  21 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  34 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  11 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   2 cpi   :  31 cpse  :   0 dec   :   1 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   2 inc   :   0 jmp   :  22 ld    :  15 ldd   :  62 ldi   :  61 
lds   :   0 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  13 movw  :  10 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   6 out   :  41 pop   :   1 push  :   1 rcall :   4 ret   :  20 
reti  :   0 rjmp  :  55 rol   :   0 ror   :   0 sbc   :   2 sbci  :   1 
sbi   :   0 sbic  :   0 sbis  :   1 sbiw  :  10 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  43 std   :  28 sts   :   0 sub   :   1 subi  :  14 swap  :   0 
tst   :   3 wdr   :   0 
Instructions used: 45 out of 116 (38.8%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000564   1312     68   1380   32768   4.2%
[.dseg] 0x000060 0x000278      0     24     24    2048   1.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 1 warnings
